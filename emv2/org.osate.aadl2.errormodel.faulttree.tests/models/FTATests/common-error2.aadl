package common_error2
public

	data mydata
	end mydata;

	device sensor
		features
			valueout: out data port mydata;
		annex EMV2 {**
			use types ErrorLibrary;
			use behavior ErrorLibrary::FailStop;
			
			error propagations
				valueout: out propagation {LateDelivery, ServiceError};
				flows
					ef0: error source valueout {LateDelivery};
			end propagations;
			
			component error behavior
				propagations
					FailStop -[]-> valueout {ServiceError};
			end component;
		**};
	end sensor;

	system computing
		features
			valuein: in data port mydata;
			valueout1: out data port mydata;
			valueout2: out data port mydata;
		annex EMV2 {**
			use types ErrorLibrary;
			use behavior ErrorLibrary::FailStop;
			
			error propagations
				valuein: in propagation {LateDelivery, ServiceError};
				valueout1: out propagation {ServiceError};
				valueout2: out propagation {ServiceError};
				flows
					ef0: error path valuein {LateDelivery, ServiceError} -> valueout1 {ServiceError};
					ef1: error path valuein {LateDelivery, ServiceError} -> valueout2 {ServiceError};
			end propagations;
			
			component error behavior
				propagations
					FailStop -[]-> valueout1 {ServiceError};
					FailStop -[]-> valueout2 {ServiceError};
			end component;
		**};
	end computing;

	device actuator
		features
			valuein: in data port mydata;
		annex EMV2 {**
			use types ErrorLibrary;
			use behavior ErrorLibrary::FailStop;
			
			error propagations
				valuein: in propagation {ServiceError};
				flows
					ef0: error sink valuein {ServiceError};
			end propagations;
			
			component error behavior
				transitions
					t0: operational -[valuein {ServiceError}]-> failstop;
			end component;
			
		**};
	end actuator;

	system main
	end main;

-- example with composite error state to the last subcomponents that affect the system error state
-- other components are included based on backward flow. 
-- Each of those components has its own error state machine with error events.
	system implementation main.commonevents
		subcomponents
			s0: device sensor;
			c0: system computing;
			a0: device actuator;
			a1: device actuator;
		connections
			conn0: port s0.valueout -> c0.valuein;
			conn1: port c0.valueout1 -> a0.valuein;
			conn2: port c0.valueout2 -> a1.valuein;
		annex EMV2 {**
			use types ErrorLibrary;
			use behavior ErrorLibrary::FailStop;
			
			composite error behavior
				states
					[a0.failstop and a1.failstop]-> failstop;
			end composite;
		**};
	end main.commonevents;

end common_error2;